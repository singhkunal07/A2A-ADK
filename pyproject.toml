[project]
name = "decision-flow-agent"
version = "0.1.0"
description = "A2A-based decision flow agent system with router and specialized sub-agents"
authors = [{ name = "Decision Flow Team", email = "team@example.com" }]
license = "Apache-2.0"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "a2a-sdk>=0.2.4",
    "google-genai>=1.9.0",
    "google-adk>=1.0.0",
    "httpx>=0.28.1",
    "httpx-sse>=0.4.0",
    "pydantic>=2.10.6",
    "python-dotenv>=1.1.0",
    "uvicorn>=0.34.0",
    "starlette>=0.46.1",
    "click>=8.1.8",
    "sse-starlette>=2.2.1",
    "typing-extensions>=4.12.2",
    "google-cloud-aiplatform[agent-engines]>=1.93.0",
    "pyjwt>=2.10.1",
    "jwcrypto>=1.5.6",
    "aiohttp>=3.9.0",
    "openai>=1.0.0",
    "anthropic>=0.25.0"
]

[tool.hatch.build.targets.wheel]
packages = ["decision_flow_agent", "agents"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pytest>=8.3.5", 
    "pytest-asyncio>=0.26.0",
    "pytest-mock>=3.14.0",
    "black>=25.1.0",
    "ruff>=0.11.2"
]

[tool.black]
line-length = 88
target-version = ['py312']

[tool.ruff]
target-version = "py312"
line-length = 88
select = ["E", "W", "F", "I", "N", "UP"]
ignore = ["E501"]  # Line too long (handled by black)

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]